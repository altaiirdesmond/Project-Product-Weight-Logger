<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgIAAAC/CAYAAACMjrROAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAP
        YQAAD2EBqD+naQAAChBJREFUeF7t3XmMXVUdB3AQkSgocQkUKKKAEBJEhWgQUESNskRBYoSASgBXkNIi
        lSWyyKYmgBUEwiZhSWlBqASUtaIsUtbShZa2sy+dDt2gy/TNFDieOz1jsB7gzf7mzeeTfJPpvPvOve/2
        j+9vZt67d5NFp2wTZGhTO3GX0HrV98Lq56ct6Fyy6PEQwo9jdonZBACGVK6oZHDS8JsvhGX3XrKg1Dhz
        bmfrvMmx+A+M2TL9VwDA0MsVlgxcaiaMDc2XHxZWzZgyv6u99slY/D+L2TmdfgAYXrnykv6n7szdQ9sN
        x4c1cx+uKzXPfiCW/6ExW6fTDgCVIVdi0vfUn7d3eGXK6aFj0ZPNHQufmBrLf++YzdLpBoDKkisz6X0a
        L/5SWDn96rpS06yXOhY89odY/p9MpxgAKleu1KTMnDomNF36zbDq6anzO5csfCyW/9ExH0unFgAqX7bg
        5B1TM36H0DLp22H1C39d2Nk6b3os/8NitkqnFABGjlzRST4148eGliuODGtm/a2m1DznwVj+B8VskU4l
        AIw8ucKT/033bwCujAPA7PtrS02z7o/lf0DM5ukUAsDIlSu+/mbptPPC0rvPyT42onLqdqFl0uEbfgPQ
        NOvvsfz3j/EJAACqR7YA+5pxY8Krj90Yu3KD4uvie9ltKznjtg3Nlx0SVr9wz8L0J4Avx7w3nTIAqB7Z
        IuxDil+fr3rmzu4B4K1WPT0l/mS9ffc2PTZ+biWl8ZIDN3wKYPH8f8RD/XrM+9KpAoDqkyvD3qb2V7uG
        joVPdJd8TvFYcaOdHrk1hjv15+0TVj7yp9qu9u6bAB0e84F0igCgeuVKsTepO2uPsK5xZnfBv5N1dc+m
        ryprECguBdx++2mh1DxnXjy042I+nE4NAFS/XDmWm4YL9wtdy5u6y703cmsNdYo/ZSy+9tiw9uV/Na6r
        ffqaeFg7plMCAKNHriTLSdPvvhrWv7ZkQ7P3UvOlB2fXHKo0/f5rxRsBF5UaZ94XD2evdCoAYPTJFeW7
        pfWaY8IbnWs3tHofvLm+M7TdcEJ27cFM3dl7hhUPTqrp3PA+gINjfBIAgNEtV5jvlPbJ48Obb6zvLvR+
        eeP1uNaE7D4GOjXjtw+Lr/1BKDW9ODfu+ecxH0kvHwBGt1xxvl2W3XNh/HH+ze4eHxBxrWLN3L4GKsX7
        GF57anJTZ9uC4rONe6aXDQAUcuVZTvort+ZApua0j4clt5wcSs2zi08DHBnjegAAsLFciZaT/sqtOVDp
        vijQc3e1lJrn3BJ3tVN6qQDAxnJFWk5yctsVyclt1990/xbg1l+EUtOsl+IuDo15T3qZAEBOrlDLSU5u
        uyI5ue36k4YL9g2rnrmjudQ859a4vGsCAEA5cqVaTnJy2xXJyW3Xp4wbExZfd1zPlQG/E+PugABQrmy5
        lpGc3HZFcnLb9TbF5Y1XPnJVa2f7omlxyd3TSwIAypUr2HKSk9uuSE5uu96kuDpgx4LHF8alTo7ZMr0c
        AKA3ciVbTnJy2xXJyW1XVsaNCW1//lHobHv5ubjMQellAAB9kS3bMpKT265ITm67d0txu+Pl91+6omtZ
        45S4xM7pJQAAfZUr3EpMw/mfD6ufn9YaB4DTYj6YDh8A6I9c6VZairsVdtQ8VR8HgO/GpCMHAPotV7yV
        lA03C+q+QNB+6ZABgIGSK9+KyKnbdd/psNQ857E4BOyWDhcAGEjZEh7mFJcKXjrt/OKTAXfEIWBMOlQA
        YKDling4U3wyYOX0q5evX9F6eRwCPpQOEwAYDLkyHq4UVwpc9exfijcFFp8M2CIdIgAwWHKFPByp//Wn
        w9qXHpkdB4CfxrhrIAAMhVwpD3Xqz/lsWFf/3JNxAPhhTDoyAGDQ5Yp5KFN/7udCV3vNg3EAOCYdEgAw
        VHLlPFQphoDXVy+7Mw4BR6XDAQCGUq6ghyL153wmdLUveiAOAUenQwEAhlqupAc7dWfvGdbVP1u8J+DY
        dBgAwHDIFfVgpu7M3cOaOQ+9GIeAE9IhAADDJVfWg5XaiTuH12bcXheHgJNiNk2HAAAMl1xhD0ZqJuwY
        Vjx85fI4AEyM2SztHgAYTrnSHvCMGxOW3nVOWL9y8RVxCHh/2jUAMNyyxT3AWXLbKaFzycK74hCwddot
        AFAJcsU9kFl87fdDqWXu43EI2C7tEgCoFLnyHqg0X3ZIKDW9+FIcAnZPuwMAKkmuwAciDRfsGzpqZhR3
        Evxi2hUAUGlyJd7fFLcTXj3z3sVxCDgi7QYAqES5Iu9PaiaMDSunX/1qHAJOSrsAACpVrsz7k/Ypp4eu
        ZQ3XxUFgi7QLAKBS5cq8r2m9+qjQ2fbyo3EI2CYtDwBUslyh9yWNFx8QSs2zi08I7JmWBgAqXa7Ue5va
        M3YLa+Y+VNxD4LC0LAAwEuSKvVcZNyaseGhSexwCxqUlAYCRIlvuvUjbjSeGrmWNU+MgsFVaEgAYKXLl
        Xm4af/uV0Nm24Pk4BOySlgMARpJcwZeT2jM+FdbOf/TlOAR8Iy0FAIw0uZIvJyseuLw5DgET0jIAwEiU
        K/l3S3G9gK6ldffFQcBthQFgJMsV/Tul/rx9QqlpVnG9gL3SEgDASJUr+7dLzfgdwmv/vq0pDgHHpKcD
        ACNZrvDfLm03/SR0Lp4/JQ4C70tPBwBGslzh59J40f49lxDeOT0VABjpcqW/cWom7BhWPXNnSxwCDk9P
        AwCqQa74N86Sm08KpZa5t8VBYLP0NACgGuSK/61pvGi/4k8C8+IQ8In0FACgWuTKvyfFpwRWzZhSXDjo
        iLQ5AFBNcgNAT9puOKH4lEBxQ6HN0+YAQDXJDQBF6s/du+dPArulTQGAapMbAoqs/Of19XEIOC5tBgBU
        o9wQ0PLHI0Jn67xH4iCwVdoMAKhGGw8BtRN3DWvnTW+IQ8C+aRMAoFptPAi0T54Q1jU8f316GACoZm8d
        Ahou2DeUmrovIzw2PQwAVLP/DgLjtg2vPn5T8SeBo9NDAEC16xkEmid9q+cNglumhwCAalcMATW/3Cms
        mfNgXRwCDkjfBgBGg2IQaLvxxLCu9um74yCwafo2ADAa1J21R+hY+ERTHAL2SN8CAEaLV6ZODGvmPnRz
        +icAMJp01DzVEkLYIf0TABhN4hBwfPoSABht4iDw0fQlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAP9vk03+AyL9y77HnqOQAAAAAElFTkSuQmCC
</value>
  </data>
</root>